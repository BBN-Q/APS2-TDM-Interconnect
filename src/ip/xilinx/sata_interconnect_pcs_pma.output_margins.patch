diff --git a/TDM-interconnect/TDM-interconnect.srcs/sources_1/ip/sata_interconnect_pcs_pma/synth/sata_interconnect_pcs_pma.vhd b/APS2-interconnect/APS2-interconnect.srcs/sources_1/ip/sata_interconnect_pcs_pma/synth/sata_interconnect_pcs_pma.vhd
index 034d48b..15c76a0 100644
--- a/TDM-interconnect/TDM-interconnect.srcs/sources_1/ip/sata_interconnect_pcs_pma/synth/sata_interconnect_pcs_pma.vhd
+++ b/APS2-interconnect/APS2-interconnect.srcs/sources_1/ip/sata_interconnect_pcs_pma/synth/sata_interconnect_pcs_pma.vhd
@@ -46,10 +46,10 @@
 -- regulations governing limitations on product liability.
 --
 -- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
--- PART OF THIS FILE AT ALL TIMES. 
- 
+-- PART OF THIS FILE AT ALL TIMES.
+
 --------------------------------------------------------------------------------
--- Description: This Core Block Level wrapper connects the core to a LVDS 
+-- Description: This Core Block Level wrapper connects the core to a LVDS
 --              transceiver implementation
 --
 --              The SGMII adaptation module is provided to convert
@@ -94,7 +94,7 @@ library ieee;
 use ieee.std_logic_1164.all;
 USE IEEE.std_logic_unsigned.ALL;
 USE IEEE.std_logic_arith.ALL;
-use ieee.numeric_std.all; 
+use ieee.numeric_std.all;
 library gig_ethernet_pcs_pma_v15_2_0;
 use gig_ethernet_pcs_pma_v15_2_0.all;
 --------------------------------------------------------------------------------
@@ -145,8 +145,9 @@ entity sata_interconnect_pcs_pma is
       ---------------
       status_vector        : out std_logic_vector(15 downto 0); -- Core status.
       reset                : in std_logic;                     -- Asynchronous reset for entire core.
-      signal_detect        : in std_logic                      -- Input from PMD to indicate presence of optical input.
-
+      signal_detect        : in std_logic;                      -- Input from PMD to indicate presence of optical input.
+      left_margin          : out std_logic_vector(4 downto 0);
+      right_margin         : out std_logic_vector(4 downto 0)
 );
 end sata_interconnect_pcs_pma;
 
@@ -159,7 +160,7 @@ architecture block_level of sata_interconnect_pcs_pma is
    -- Component Declaration for the LVDS transceiver module
    -----------------------------------------------------------------------------
    component sata_interconnect_pcs_pma_block
-   
+
    port (
       -- LVDS transceiver Interface
       -----------------------------
@@ -200,10 +201,12 @@ architecture block_level of sata_interconnect_pcs_pma is
       ---------------
       status_vector        : out std_logic_vector(15 downto 0); -- Core status.
       reset                : in std_logic;                     -- Asynchronous reset for entire core.
-      signal_detect        : in std_logic                      -- Input from PMD to indicate presence of optical input.
+      signal_detect        : in std_logic;                      -- Input from PMD to indicate presence of optical input.
+      left_margin          : out std_logic_vector(4 downto 0);
+      right_margin         : out std_logic_vector(4 downto 0)
+   );
 
-);
-end component;
+   end component;
 
 
 ATTRIBUTE CORE_GENERATION_INFO : STRING;
@@ -257,7 +260,9 @@ begin
       ---------------
       status_vector         => status_vector,
       reset                 => reset,
-      signal_detect         => signal_detect
+      signal_detect         => signal_detect,
+      left_margin           => left_margin,
+      right_margin          => right_margin
 );
 
 end block_level;
diff --git a/TDM-interconnect/TDM-interconnect.srcs/sources_1/ip/sata_interconnect_pcs_pma/synth/sata_interconnect_pcs_pma_block.vhd b/APS2-interconnect/APS2-interconnect.srcs/sources_1/ip/sata_interconnect_pcs_pma/synth/sata_interconnect_pcs_pma_block.vhd
index 2784151..ef61ecb 100644
--- a/TDM-interconnect/TDM-interconnect.srcs/sources_1/ip/sata_interconnect_pcs_pma/synth/sata_interconnect_pcs_pma_block.vhd
+++ b/APS2-interconnect/APS2-interconnect.srcs/sources_1/ip/sata_interconnect_pcs_pma/synth/sata_interconnect_pcs_pma_block.vhd
@@ -46,10 +46,10 @@
 -- regulations governing limitations on product liability.
 --
 -- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
--- PART OF THIS FILE AT ALL TIMES. 
- 
+-- PART OF THIS FILE AT ALL TIMES.
+
 --------------------------------------------------------------------------------
--- Description: This Core Block Level wrapper connects the core to a LVDS 
+-- Description: This Core Block Level wrapper connects the core to a LVDS
 --              transceiver implementation
 --
 --              The SGMII adaptation module is provided to convert
@@ -94,7 +94,7 @@ library ieee;
 use ieee.std_logic_1164.all;
 USE IEEE.std_logic_unsigned.ALL;
 USE IEEE.std_logic_arith.ALL;
-use ieee.numeric_std.all; 
+use ieee.numeric_std.all;
 
 
 library gig_ethernet_pcs_pma_v15_2_0;
@@ -119,7 +119,7 @@ entity sata_interconnect_pcs_pma_block is
 
       clk125m     : in std_logic;
       mmcm_locked  : in std_logic;
-      
+
       sgmii_clk_r   : out std_logic;           -- Clock for client MAC (125Mhz, 12.5MHz or 1.25MHz).
       sgmii_clk_f   : out std_logic;           -- Clock for client MAC (125Mhz, 12.5MHz or 1.25MHz).
       sgmii_clk_en: out std_logic;             -- Clock enable for client MAC
@@ -149,8 +149,9 @@ entity sata_interconnect_pcs_pma_block is
       ---------------
       status_vector        : out std_logic_vector(15 downto 0); -- Core status.
       reset                : in std_logic;                     -- Asynchronous reset for entire core.
-      signal_detect        : in std_logic                      -- Input from PMD to indicate presence of optical input.
-
+      signal_detect        : in std_logic;                      -- Input from PMD to indicate presence of optical input.
+      left_margin          : out std_logic_vector(4 downto 0);
+      right_margin         : out std_logic_vector(4 downto 0)
 );
 end sata_interconnect_pcs_pma_block;
 
@@ -279,7 +280,7 @@ end component;
     mdio_tri : out std_logic;
     an_adv_config_vector : in std_logic_vector ( 15 downto 0) := (others => '0');
     an_adv_config_val : in std_logic := '0';
-    an_restart_config : in std_logic := '0';  
+    an_restart_config : in std_logic := '0';
     configuration_vector : in std_logic_vector(4 downto 0) := (others => '0');
     configuration_valid : in std_logic := '0';
     status_vector : out std_logic_vector(15 downto 0);
@@ -298,7 +299,7 @@ end component;
     drp_daddr                   : out std_logic_vector( 9 downto 0);
     drp_di                      : out std_logic_vector(15 downto 0);
     drp_do                      : in  std_logic_vector(15 downto 0) := (others => '0');
-    
+
     -- 1588 Timer input
     systemtimer_s_field     : in std_logic_vector(47 downto 0) := (others => '0');
     systemtimer_ns_field    : in std_logic_vector(31 downto 0) := (others => '0');
@@ -374,7 +375,7 @@ end component;
    component sata_interconnect_pcs_pma_reset_wtd_timer
    generic (
      WAIT_TIME  : std_logic_vector(23 downto 0) := x"8F0D18"
-   );   
+   );
    port (
        clk         : in  std_logic;
        data_valid  : in  std_logic;
@@ -392,9 +393,9 @@ end component;
     signal gmii_rxd_int              : std_logic_vector(7 downto 0);             -- Internal gmii_rxd signal (between core and SGMII adaptation module).
     signal gmii_rx_dv_int             : std_logic;                                -- Internal gmii_rx_dv signal (between core and SGMII adaptation module).
     signal gmii_rx_er_int             : std_logic;                                -- Internal gmii_rx_er signal (between core and SGMII adaptation module).
-    signal lvds_phy_ready             : std_logic; 
+    signal lvds_phy_ready             : std_logic;
     signal rxbufstatus                : std_logic_vector(1 downto 0);             -- Elastic Buffer Status (bit 1 asserted indicates  overflow or underflow).
-    
+
    signal rxchariscomma     : std_logic_vector (0 downto 0);    -- Comma detected in RXDATA.
    signal rxcharisk         : std_logic_vector (0 downto 0);    -- K character received (or extra data bit) in RXDATA.
    signal rxclkcorcnt       : std_logic_vector (2 downto 0);    -- Indicates clock correction.
@@ -432,14 +433,14 @@ begin
    reset_wtd_timer : sata_interconnect_pcs_pma_reset_wtd_timer
    generic map (
      WAIT_TIME  => x"596825"
-   )   
+   )
    port map
           (
              clk             =>  clk125m,
              data_valid      =>  status_vector_int(1),
              reset           =>  wtd_reset
           );
-  
+
 rx_reset   <= wtd_reset or mgt_rx_reset;
 phyaddress <= std_logic_vector(to_unsigned(1, phyaddress'length));
 
@@ -464,7 +465,7 @@ sgmii_clk_r <= sgmii_clk_r_i;
 
 
   status_vector <= status_vector_int;
-  
+
 
 
   sgmii_logic : sata_interconnect_pcs_pma_sgmii_adapt
@@ -533,7 +534,7 @@ sgmii_clk_r <= sgmii_clk_r_i;
       txcharisk            => txcharisk,
       txdata               => txdata,
       enablealign          => enablealign,
-      
+
       gmii_txd             => gmii_txd_int,
       gmii_tx_en           => gmii_tx_en_int,
       gmii_tx_er           => gmii_tx_er_int,
@@ -541,11 +542,11 @@ sgmii_clk_r <= sgmii_clk_r_i;
       gmii_rx_dv           => gmii_rx_dv_int,
       gmii_rx_er           => gmii_rx_er_int,
       gmii_isolate         => gmii_isolate,
-      
+
       mdc                  => '0',
       mdio_in              => '0',
       phyad                => (others => '0'),
-      configuration_valid  => '0',      
+      configuration_valid  => '0',
       mdio_out             => open,
       mdio_tri             => open,
       configuration_vector => configuration_vector,
@@ -561,11 +562,11 @@ sgmii_clk_r <= sgmii_clk_r_i;
       reset                => reset,
       signal_detect        => lvds_phy_rdy_sig_det,
       -- drp interface used in 1588 mode
-      drp_dclk             => '0',        
-      drp_gnt              => '0',        
-      drp_drdy             => '0',        
+      drp_dclk             => '0',
+      drp_gnt              => '0',
+      drp_drdy             => '0',
       drp_do               => (others => '0'),
-      drp_req              => open, 
+      drp_req              => open,
       drp_den              => open,
       drp_dwe              => open,
       drp_daddr            => open,
@@ -577,8 +578,8 @@ sgmii_clk_r <= sgmii_clk_r_i;
       rxphy_s_field          => open,
       rxphy_ns_field         => open,
       rxphy_correction_timer => open,
-      
-      rxrecclk             => '0',        
+
+      rxrecclk             => '0',
       gtx_clk              => '0',
       link_timer_basex     => (others => '0'),
       link_timer_sgmii     => (others => '0'),
@@ -599,7 +600,7 @@ sgmii_clk_r <= sgmii_clk_r_i;
    --  Component Instantiation for the LVDS Transceiver
    -----------------------------------------------------------------------------
 
-  lvds_transceiver_mw : sata_interconnect_pcs_pma_lvds_transceiver_k7 
+  lvds_transceiver_mw : sata_interconnect_pcs_pma_lvds_transceiver_k7
    port map (
       enmcommaalign    =>     enablealign,
       enpcommaalign    =>     enablealign,
@@ -615,15 +616,15 @@ sgmii_clk_r <= sgmii_clk_r_i;
       rxdisperr        =>     rxdisperr(0),
       rxnotintable     =>     rxnotintable(0),
       rxrundisp        =>     rxrundisp(0),
-      clk625           =>     clk625, 
-      clk208           =>     clk208, 
-      clk104           =>     clk104, 
+      clk625           =>     clk625,
+      clk208           =>     clk208,
+      clk104           =>     clk104,
       phy_cdr_lock     =>     lvds_phy_ready,
-      o_r_margin       =>     open,
-      o_l_margin       =>     open,    
+      o_r_margin       =>     right_margin,
+      o_l_margin       =>     left_margin,
       eye_mon_wait_time =>    eye_mon_wait_time,
-      clk125           =>     clk125m, 
-      pin_sgmii_txn    =>     txn, 
+      clk125           =>     clk125m,
+      pin_sgmii_txn    =>     txn,
       pin_sgmii_txp    =>     txp,
       pin_sgmii_rxn    =>     rxn,
       pin_sgmii_rxp    =>     rxp,
